@startuml

class WindowManagerService {
PointerEventDispatcher mPointerEventDispatcher
registerPointerEventListener(PointerEventListener listener)
}

class WtServer {
RemoteCallbackList<ICallback> mCallbackList
registerCallback()
unregisterCallback()
sendEventToFilter(MotionEvent motionEvent)
sendFilterResultToRemote(IBinder iBinder, String token, Bundle bundle)

}

class IWtServer$Stub{
}

class Binder {

}


class Services$PointerEventListener {

}

abstract MotionEventFilter {
String mToken
abstract void perform(MotionEvent motionEvent)
}

class FingerFlingFilter {
perform(MotionEvent motionEvent)
}

class FingerSlideFilter {
perform(MotionEvent motionEvent)
}

class LongClickFilter {
perform(MotionEvent motionEvent)
}

class SingleClickFilter {
perform(MotionEvent motionEvent)
}


MotionEventFilter <|-- FingerFlingFilter
MotionEventFilter <|-- FingerSlideFilter
MotionEventFilter <|-- LongClickFilter
MotionEventFilter <|-- SingleClickFilter
IWtServer$Stub <|-- WtServer
Binder <|-- IWtServer$Stub
WtServer *-- MotionEventFilter
WindowManagerService --> Services$PointerEventListener
Services$PointerEventListener --> WtServer
@enduml