@startuml

box "App" #LightYellow
participant Activity
participant Instrumentation
participant ActivityManager
participant ClientTransaction
participant ActivityThread_ApplicationThread
participant ActivityThread
participant TransactionExecutor
participant PauseActivityItem
end box

box "Binder" #Light
participant IActivityManager
end box

box "AMS" #LightYellow
participant ActivityManagerService
participant ActivityStarter
participant ActivityStartController
participant ActivityStackSupervisor
participant ActivityDisplay
participant ActivityStack
participant TaskRecord
participant ActivityRecord
participant ClientLifecycleManager
end box

box "Controller"  #Light
participant DisplayWindowController
participant StackWindowController
participant TaskWindowContainerController
participant AppWindowContainerController
end box

box "WMS"  #LightYellow
participant RootWindowContainer
participant DisplayContent
participant TaskStack
participant TaskStackContainers
participant Task
participant AppWindowToken
end box


activate Activity
Activity -> Activity: startActivity(Intent intent, @Nullable Bundle options)
activate Activity
Activity -> Activity: startActivityForResult(Intent intent, int requestCode)
activate Activity
Activity -> Instrumentation: execStartActivity(...)
activate Activity

activate Instrumentation
Instrumentation -> ActivityManager: getService()

activate ActivityManager
ActivityManager -> IActivityManager: startActivity(...)
deactivate ActivityManager
deactivate Activity
deactivate Activity
deactivate Activity
deactivate Activity
deactivate Instrumentation

activate IActivityManager
IActivityManager -> ActivityManagerService: startActivity(...)

activate ActivityManagerService
ActivityManagerService -> ActivityManagerService: startActivityAsUser(...)
activate ActivityManagerService
ActivityManagerService -> ActivityStartController: obtainStarter()

activate ActivityStartController
ActivityManagerService -> ActivityStarter: execute()
deactivate ActivityStartController

activate ActivityStarter
ActivityStarter -> ActivityStarter: startActivityMayWait()
activate ActivityStarter
ActivityStarter -> ActivityStarter: startActivity()
activate ActivityStarter
ActivityStarter -> ActivityStarter: startActivityUnchecked()
activate ActivityStarter
ActivityStarter -> ActivityStarter: getReusableIntentActivity()
ActivityStarter -> ActivityStarter: setTaskFromReuseOrCreateNewTask()
activate ActivityStarter
ActivityStarter -> ActivityStarter: computeStackFocus()
activate ActivityStarter
ActivityStarter -> ActivityStarter: getLaunchStack()
activate ActivityStarter
ActivityStarter -> ActivityStackSupervisor: getLaunchStack()

activate ActivityStackSupervisor
ActivityStackSupervisor -> ActivityStackSupervisor: getActivityDisplayOrCreateLocked()
activate ActivityStackSupervisor
ActivityStackSupervisor -> ActivityDisplay: new()

activate ActivityDisplay
ActivityDisplay -> ActivityDisplay: createWindowContainerController()
activate ActivityDisplay
deactivate ActivityDisplay
ActivityDisplay -> DisplayWindowController : new()

activate DisplayWindowController
DisplayWindowController -> RootWindowContainer : createDisplayContent()

activate RootWindowContainer
RootWindowContainer -> DisplayContent : new()

activate DisplayContent
DisplayContent -> RootWindowContainer : addChild()
activate RootWindowContainer
deactivate RootWindowContainer
deactivate DisplayContent
deactivate RootWindowContainer
deactivate DisplayWindowController
deactivate ActivityDisplay

ActivityStackSupervisor -> ActivityStackSupervisor: attachDisplay()
activate ActivityStackSupervisor


ActivityStackSupervisor -> ActivityStackSupervisor: mActivityDisplays.put(display.mDisplayId, display)
activate ActivityStackSupervisor
ActivityStackSupervisor -> ActivityDisplay: getOrCreateStack()

activate ActivityDisplay
ActivityDisplay -> ActivityDisplay: getOrCreateStack()
activate ActivityDisplay
ActivityDisplay -> ActivityDisplay: createStack()
activate ActivityDisplay
ActivityDisplay -> ActivityDisplay: createStackUnchecked()
activate ActivityDisplay
deactivate ActivityDisplay
ActivityDisplay -> ActivityStack: new()

activate ActivityStack
ActivityStack -> ActivityStack: createStackWindowController()
activate ActivityStack
ActivityStack -> StackWindowController: new()
activate StackWindowController
StackWindowController -> DisplayContent: createStack()

activate DisplayContent
DisplayContent -> TaskStack: new()

activate TaskStack
DisplayContent -> TaskStackContainers: addStackToDisplay()
deactivate TaskStack

activate TaskStackContainers
TaskStackContainers -> TaskStackContainers: addChild()
activate TaskStackContainers
deactivate TaskStackContainers
deactivate TaskStackContainers
deactivate ActivityStack
deactivate DisplayContent
deactivate StackWindowController

ActivityStack -> ActivityStack: postAddToDisplay()
activate ActivityStack
ActivityStack -> ActivityDisplay: addChild()
activate ActivityDisplay
deactivate ActivityStack
deactivate ActivityStack
deactivate ActivityDisplay
deactivate ActivityDisplay
deactivate ActivityDisplay
deactivate ActivityDisplay
deactivate ActivityStarter
deactivate ActivityStarter
deactivate ActivityStackSupervisor
deactivate ActivityStackSupervisor
deactivate ActivityStackSupervisor
deactivate ActivityStackSupervisor

ActivityStarter -> ActivityStack: createTaskRecord()
activate ActivityStack

ActivityStack -> TaskRecord: create()
activate ActivityStack

activate TaskRecord
TaskRecord -> TaskRecord: new()
activate TaskRecord
deactivate ActivityStack
deactivate TaskRecord
deactivate TaskRecord


ActivityStack -> ActivityStack: addTask()
activate ActivityStack
ActivityStack -> TaskRecord: createWindowContainer()

activate TaskRecord
TaskRecord -> TaskWindowContainerController: new()

activate TaskWindowContainerController
TaskWindowContainerController -> TaskWindowContainerController: createTask()
activate TaskWindowContainerController
deactivate TaskWindowContainerController
TaskWindowContainerController -> Task: new()

activate Task
TaskWindowContainerController -> TaskStack: addTask()
deactivate Task

activate TaskStack
TaskStack -> TaskStack: addChild()
activate TaskStack
deactivate TaskStack
deactivate TaskStack
deactivate ActivityStarter
deactivate ActivityStack
deactivate ActivityStack
deactivate TaskWindowContainerController
deactivate TaskRecord

ActivityStarter -> ActivityStack: startActivityLocked

activate ActivityStack
ActivityStack -> ActivityStack: insertTaskAtTop()
activate ActivityStack
deactivate ActivityStack
ActivityStack -> ActivityRecord: createWindowContainer()

activate ActivityRecord
ActivityRecord -> AppWindowContainerController: new()

activate AppWindowContainerController
AppWindowContainerController -> AppWindowContainerController: createAppWindow()
activate AppWindowContainerController
AppWindowContainerController -> AppWindowToken: new()

activate AppWindowToken
AppWindowContainerController -> Task: addChild(atoken, index)
deactivate AppWindowToken
activate Task

ActivityRecord -> TaskRecord: addActivityToTop()
deactivate Task
deactivate AppWindowContainerController
deactivate AppWindowContainerController
activate TaskRecord

TaskRecord -> TaskRecord :mActivities.add(index, r)

activate TaskRecord
deactivate TaskRecord
deactivate TaskRecord
deactivate ActivityRecord

ActivityStack -> ActivityRecord: showStartingWindow()

activate ActivityRecord
ActivityRecord -> AppWindowContainerController: addStartingWindow()

activate AppWindowContainerController
AppWindowContainerController -> AppWindowContainerController: scheduleAddStartingWindow()

activate AppWindowContainerController
deactivate AppWindowContainerController
deactivate AppWindowContainerController
deactivate ActivityRecord
deactivate ActivityStack


ActivityStarter -> ActivityStackSupervisor: resumeFocusedStackTopActivityLocked()

activate ActivityStackSupervisor
ActivityStackSupervisor -> ActivityStack: resumeTopActivityUncheckedLocked()

activate ActivityStack
ActivityStack -> ActivityStack: resumeTopActivityInnerLocked()
activate ActivityStack
ActivityStack -> ActivityStackSupervisor: pauseBackStacks()
activate ActivityStackSupervisor
ActivityStackSupervisor -> ActivityStack: startPausingLocked()

activate ActivityStack
ActivityStack -> ActivityStack: startPausingLocked()
activate ActivityStack
ActivityStack -> ClientLifecycleManager: scheduleTransaction()

activate ClientLifecycleManager
ClientLifecycleManager -> ClientTransaction:schedule()
activate ClientTransaction

ClientTransaction -> ActivityThread_ApplicationThread:scheduleTransaction()
deactivate ClientTransaction
deactivate ClientLifecycleManager
deactivate ActivityStack
deactivate ActivityStack
deactivate ActivityStack
deactivate ActivityStack
deactivate ActivityStackSupervisor
deactivate ActivityStackSupervisor
deactivate IActivityManager
deactivate ActivityManagerService
deactivate ActivityManagerService
deactivate ActivityStarter
deactivate ActivityStarter
deactivate ActivityStarter
deactivate ActivityStarter

activate ActivityThread_ApplicationThread
ActivityThread_ApplicationThread -> ActivityThread:scheduleTransaction()
deactivate ActivityThread_ApplicationThread

activate ActivityThread
ActivityThread -> ActivityThread:sendMessage()
activate ActivityThread
ActivityThread -> TransactionExecutor:execute()
activate TransactionExecutor
TransactionExecutor -> TransactionExecutor:executeLifecycleState()
activate TransactionExecutor
TransactionExecutor -> PauseActivityItem:execute()
activate PauseActivityItem
PauseActivityItem -> ActivityThread:handlePauseActivity()
activate ActivityThread
ActivityThread -> ActivityThread:performPauseActivity()
activate ActivityThread
ActivityThread -> ActivityThread:performPauseActivityIfNeeded()
ActivityThread -> Instrumentation:callActivityOnPause()
activate Instrumentation
Instrumentation -> Activity:performPause
activate Activity
Activity -> Activity:onPause()
activate Activity
deactivate Activity
deactivate Activity
deactivate Instrumentation
deactivate ActivityThread
deactivate ActivityThread
deactivate ActivityThread
deactivate ActivityThread
deactivate TransactionExecutor
deactivate TransactionExecutor
deactivate PauseActivityItem

@enduml