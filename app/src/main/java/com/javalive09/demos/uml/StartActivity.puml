@startuml

box "App" #LightYellow
participant Activity
participant Application
participant Instrumentation
participant ActivityManager
participant ActivityThread_ApplicationThread
participant ActivityThread
participant TransactionExecutor
participant LaunchActivityItem
participant ResumeActivityItem
participant PauseActivityItem
participant Looper
participant ZygoteInit
participant RuntimeInit
participant ZygoteConnection_App
participant ClientTransaction_App

end box

box "Binder" #Light
participant IActivityManager
participant IApplicationThread
end box

box "AMS" #LightYellow
participant ActivityManagerService
participant ActivityStarter
participant ActivityStartController
participant ActivityStackSupervisor
participant ActivityDisplay
participant ActivityStack
participant TaskRecord
participant ActivityRecord
participant ClientLifecycleManager
participant ProcessRecord
participant Process
participant ClientTransaction_AMS
end box

box "Controller"  #Light
participant DisplayWindowController
participant StackWindowController
participant TaskWindowContainerController
participant AppWindowContainerController
end box

box "WMS"  #LightYellow
participant RootWindowContainer
participant DisplayContent
participant TaskStack
participant TaskStackContainers
participant Task
participant AppWindowToken
end box

box "Zygote"  #LightYellow
participant ZygoteProcess
participant ZygoteServer
participant ZygoteConnection_Zygote
participant Zygote
end box

activate Activity
Activity -> Activity: startActivity(...)
activate Activity
Activity -> Activity: startActivityForResult(...)
activate Activity
Activity -> Instrumentation: execStartActivity(...)
activate Activity

activate Instrumentation
Instrumentation -> ActivityManager: getService()

activate ActivityManager
ActivityManager -> IActivityManager: startActivity(...)
deactivate ActivityManager
deactivate Activity
deactivate Activity
deactivate Activity
deactivate Activity
deactivate Instrumentation

activate IActivityManager
IActivityManager -> ActivityManagerService: startActivity(...)

activate ActivityManagerService
ActivityManagerService -> ActivityManagerService: startActivityAsUser(...)
activate ActivityManagerService
ActivityManagerService -> ActivityStartController: obtainStarter()

activate ActivityStartController
ActivityManagerService -> ActivityStarter: execute()
deactivate ActivityStartController

activate ActivityStarter
ActivityStarter -> ActivityStarter: startActivityMayWait()
activate ActivityStarter
ActivityStarter -> ActivityStarter: startActivity()
activate ActivityStarter
ActivityStarter -> ActivityStarter: startActivityUnchecked()
activate ActivityStarter
ActivityStarter -> ActivityStarter: getReusableIntentActivity()
ActivityStarter -> ActivityStarter: setTaskFromReuseOrCreateNewTask()
activate ActivityStarter
ActivityStarter -> ActivityStarter: computeStackFocus()
activate ActivityStarter
ActivityStarter -> ActivityStarter: getLaunchStack()
activate ActivityStarter
ActivityStarter -> ActivityStackSupervisor: getLaunchStack()

activate ActivityStackSupervisor
ActivityStackSupervisor -> ActivityStackSupervisor: getActivityDisplayOrCreateLocked()
activate ActivityStackSupervisor
ActivityStackSupervisor -> ActivityDisplay: new()

activate ActivityDisplay
ActivityDisplay -> ActivityDisplay: createWindowContainerController()
activate ActivityDisplay
deactivate ActivityDisplay
ActivityDisplay -> DisplayWindowController : new()

activate DisplayWindowController
DisplayWindowController -> RootWindowContainer : createDisplayContent()

activate RootWindowContainer
RootWindowContainer -> DisplayContent : new()

activate DisplayContent
DisplayContent -> RootWindowContainer : addChild()
activate RootWindowContainer
deactivate RootWindowContainer
deactivate DisplayContent
deactivate RootWindowContainer
deactivate DisplayWindowController
deactivate ActivityDisplay

ActivityStackSupervisor -> ActivityStackSupervisor: attachDisplay()
activate ActivityStackSupervisor


ActivityStackSupervisor -> ActivityStackSupervisor: mActivityDisplays.put(display.mDisplayId, display)
activate ActivityStackSupervisor
ActivityStackSupervisor -> ActivityDisplay: getOrCreateStack()

activate ActivityDisplay
ActivityDisplay -> ActivityDisplay: getOrCreateStack()
activate ActivityDisplay
ActivityDisplay -> ActivityDisplay: createStack()
activate ActivityDisplay
ActivityDisplay -> ActivityDisplay: createStackUnchecked()
activate ActivityDisplay
deactivate ActivityDisplay
ActivityDisplay -> ActivityStack: new()

activate ActivityStack
ActivityStack -> ActivityStack: createStackWindowController()
activate ActivityStack
ActivityStack -> StackWindowController: new()
activate StackWindowController
StackWindowController -> DisplayContent: createStack()

activate DisplayContent
DisplayContent -> TaskStack: new()

activate TaskStack
DisplayContent -> TaskStackContainers: addStackToDisplay()
deactivate TaskStack

activate TaskStackContainers
TaskStackContainers -> TaskStackContainers: addChild()
activate TaskStackContainers
deactivate TaskStackContainers
deactivate TaskStackContainers
deactivate ActivityStack
deactivate DisplayContent
deactivate StackWindowController

ActivityStack -> ActivityStack: postAddToDisplay()
activate ActivityStack
ActivityStack -> ActivityDisplay: addChild()
activate ActivityDisplay
deactivate ActivityStack
deactivate ActivityStack
deactivate ActivityDisplay
deactivate ActivityDisplay
deactivate ActivityDisplay
deactivate ActivityDisplay
deactivate ActivityStarter
deactivate ActivityStarter
deactivate ActivityStackSupervisor
deactivate ActivityStackSupervisor
deactivate ActivityStackSupervisor
deactivate ActivityStackSupervisor

ActivityStarter -> ActivityStack: createTaskRecord()
activate ActivityStack

ActivityStack -> TaskRecord: create()
activate ActivityStack

activate TaskRecord
TaskRecord -> TaskRecord: new()
activate TaskRecord
deactivate ActivityStack
deactivate TaskRecord
deactivate TaskRecord


ActivityStack -> ActivityStack: addTask()
activate ActivityStack
ActivityStack -> TaskRecord: createWindowContainer()

activate TaskRecord
TaskRecord -> TaskWindowContainerController: new()

activate TaskWindowContainerController
TaskWindowContainerController -> TaskWindowContainerController: createTask()
activate TaskWindowContainerController
deactivate TaskWindowContainerController
TaskWindowContainerController -> Task: new()

activate Task
TaskWindowContainerController -> TaskStack: addTask()
deactivate Task

activate TaskStack
TaskStack -> TaskStack: addChild()
activate TaskStack
deactivate TaskStack
deactivate TaskStack
deactivate ActivityStarter
deactivate ActivityStack
deactivate ActivityStack
deactivate TaskWindowContainerController
deactivate TaskRecord

ActivityStarter -> ActivityStack: startActivityLocked

activate ActivityStack
ActivityStack -> ActivityStack: insertTaskAtTop()
activate ActivityStack
deactivate ActivityStack
ActivityStack -> ActivityRecord: createWindowContainer()

activate ActivityRecord
ActivityRecord -> AppWindowContainerController: new()

activate AppWindowContainerController
AppWindowContainerController -> AppWindowContainerController: createAppWindow()
activate AppWindowContainerController
AppWindowContainerController -> AppWindowToken: new()

activate AppWindowToken
AppWindowContainerController -> Task: addChild(atoken, index)
deactivate AppWindowToken
activate Task

ActivityRecord -> TaskRecord: addActivityToTop()
deactivate Task
deactivate AppWindowContainerController
deactivate AppWindowContainerController
activate TaskRecord

TaskRecord -> TaskRecord :mActivities.add(index, r)

activate TaskRecord
deactivate TaskRecord
deactivate TaskRecord
deactivate ActivityRecord

ActivityStack -> ActivityRecord: showStartingWindow()

activate ActivityRecord
ActivityRecord -> AppWindowContainerController: addStartingWindow()

activate AppWindowContainerController
AppWindowContainerController -> AppWindowContainerController: scheduleAddStartingWindow()

activate AppWindowContainerController
deactivate AppWindowContainerController
deactivate AppWindowContainerController
deactivate ActivityRecord
deactivate ActivityStack


ActivityStarter -> ActivityStackSupervisor: resumeFocusedStackTopActivityLocked()

activate ActivityStackSupervisor
ActivityStackSupervisor -> ActivityStack: resumeTopActivityUncheckedLocked()

activate ActivityStack
ActivityStack -> ActivityStack: resumeTopActivityInnerLocked()
activate ActivityStack
ActivityStack -> ActivityStackSupervisor: pauseBackStacks()
activate ActivityStackSupervisor
ActivityStackSupervisor -> ActivityStack: startPausingLocked()

activate ActivityStack
ActivityStack -> ActivityStack: startPausingLocked()
activate ActivityStack
ActivityStack -> ClientLifecycleManager: scheduleTransaction()

activate ClientLifecycleManager
ClientLifecycleManager -> ClientTransaction_AMS:schedule()
activate ClientTransaction_AMS

ClientTransaction_AMS -> IApplicationThread:scheduleTransaction()
deactivate ClientTransaction_AMS
activate IApplicationThread
deactivate ClientLifecycleManager
deactivate ActivityStack
deactivate ActivityStack
deactivate ActivityStack
deactivate ActivityStack
deactivate ActivityStackSupervisor
deactivate ActivityStackSupervisor
deactivate IActivityManager
deactivate ActivityManagerService
deactivate ActivityManagerService
deactivate ActivityStarter
deactivate ActivityStarter
deactivate ActivityStarter
deactivate ActivityStarter

IApplicationThread -> ActivityThread_ApplicationThread:scheduleTransaction()
activate ActivityThread_ApplicationThread

ActivityThread_ApplicationThread -> ActivityThread:scheduleTransaction()
deactivate ActivityThread_ApplicationThread
deactivate IApplicationThread
activate ActivityThread

ActivityThread -> ActivityThread:sendMessage()
activate ActivityThread
ActivityThread -> TransactionExecutor:execute()
activate TransactionExecutor
TransactionExecutor -> TransactionExecutor:executeLifecycleState()
activate TransactionExecutor
TransactionExecutor -> PauseActivityItem:execute()

activate PauseActivityItem
PauseActivityItem -> ActivityThread:handlePauseActivity()
activate ActivityThread
ActivityThread -> ActivityThread:performPauseActivity()
activate ActivityThread
ActivityThread -> ActivityThread:performPauseActivityIfNeeded()
ActivityThread -> Instrumentation:callActivityOnPause()
activate Instrumentation
Instrumentation -> Activity:performPause
activate Activity
Activity -> Activity:onPause()

activate Activity
deactivate Activity
deactivate Activity
deactivate Instrumentation
deactivate ActivityThread
deactivate ActivityThread
deactivate ActivityThread
deactivate ActivityThread
deactivate PauseActivityItem

TransactionExecutor -> PauseActivityItem:postExecute()
activate PauseActivityItem
PauseActivityItem -> ActivityManager:getService()
activate ActivityManager

ActivityManager -> IActivityManager:activityPaused()
deactivate TransactionExecutor
deactivate TransactionExecutor
deactivate PauseActivityItem
deactivate ActivityManager
activate IActivityManager

IActivityManager -> ActivityManagerService:activityPaused()
activate ActivityManagerService
ActivityManagerService -> ActivityStack:activityPausedLocked()
activate ActivityStack
ActivityStack -> ActivityStack:completePauseLocked()
activate ActivityStack
ActivityStack -> ActivityStackSupervisor:resumeFocusedStackTopActivityLocked()
activate ActivityStackSupervisor
ActivityStackSupervisor -> ActivityStack:resumeTopActivityUncheckedLocked()
activate ActivityStack
ActivityStack -> ActivityStack:resumeTopActivityInnerLocked()
activate ActivityStack
ActivityStack -> ActivityStackSupervisor:startSpecificActivityLocked()
activate ActivityStackSupervisor

ActivityStackSupervisor -> ActivityManagerService:startProcessLocked()
activate ActivityManagerService
ActivityManagerService -> ActivityManagerService:newProcessRecordLocked()
activate ActivityManagerService
ActivityManagerService -> ProcessRecord:new()
activate ProcessRecord
deactivate ProcessRecord
deactivate ActivityManagerService
deactivate ActivityManagerService

ActivityManagerService -> ActivityManagerService:startProcessLocked()
activate ActivityManagerService
ActivityManagerService -> ActivityManagerService:startProcess()
activate ActivityManagerService
ActivityManagerService -> Process:start()
activate Process
Process -> ZygoteProcess:start()
activate ZygoteProcess
ZygoteProcess -> ZygoteProcess:startViaZygote()
activate ZygoteProcess
deactivate Process
deactivate ActivityStack
deactivate ActivityStack
deactivate ActivityStack
deactivate ActivityStack
deactivate ActivityStackSupervisor
deactivate ActivityStackSupervisor
deactivate ActivityManagerService
deactivate ActivityManagerService
deactivate ActivityManagerService
deactivate IActivityManager


ZygoteProcess -> ZygoteServer:runSelectLoop()
activate ZygoteServer
ZygoteServer -> ZygoteConnection_Zygote:processOneCommand()
activate ZygoteConnection_Zygote
ZygoteConnection_Zygote -> Zygote:forkAndSpecialize()
activate Zygote
Zygote -> Zygote:nativeForkAndSpecialize()
activate Zygote

ZygoteConnection_Zygote -> ZygoteConnection_App:handleChildProc()
deactivate Zygote
deactivate Zygote
deactivate ZygoteConnection_Zygote
deactivate ZygoteServer
deactivate ZygoteProcess
deactivate ZygoteProcess
activate ZygoteConnection_App

ZygoteConnection_App -> ZygoteInit:zygoteInit()
activate ZygoteInit

ZygoteInit -> RuntimeInit:commonInit()
activate RuntimeInit

ZygoteInit -> ZygoteInit:nativeZygoteInit()
activate ZygoteInit

ZygoteInit -> RuntimeInit:applicationInit()
activate RuntimeInit

RuntimeInit -> RuntimeInit:findStaticMain()
activate RuntimeInit

RuntimeInit -> ActivityThread:main()
activate ActivityThread

ActivityThread -> Looper:prepareMainLooper()
activate Looper
deactivate Looper

ActivityThread -> ActivityThread:new()
activate ActivityThread
deactivate ActivityThread
ActivityThread -> ActivityThread:attach()
activate ActivityThread

ActivityThread -> ActivityManager:getService()
activate ActivityManager
ActivityManager -> ActivityManagerService:attachApplication()
deactivate ActivityManager
deactivate ActivityThread
deactivate ActivityThread
deactivate ZygoteInit
deactivate ZygoteInit
deactivate RuntimeInit
deactivate RuntimeInit
deactivate RuntimeInit
deactivate ZygoteConnection_App
activate ActivityManagerService

ActivityManagerService -> ActivityManagerService:attachApplicationLocked()
activate ActivityManagerService
ActivityManagerService -> ActivityThread:bindApplication
activate ActivityThread
ActivityThread -> ActivityThread:sendMessage(H.BIND_APPLICATION)
activate ActivityThread
ActivityThread -> ActivityThread:handleBindApplication()
activate ActivityThread
ActivityThread -> Instrumentation:onCreate()
activate Instrumentation
deactivate Instrumentation
ActivityThread -> Instrumentation:callApplicationOnCreate
activate Instrumentation
Instrumentation -> Application:onCreate()
activate Application
deactivate Application
deactivate Instrumentation
deactivate ActivityThread
deactivate ActivityThread
deactivate ActivityThread
ActivityManagerService -> ActivityStackSupervisor:attachApplicationLocked()
activate ActivityStackSupervisor

ActivityStackSupervisor -> ActivityStackSupervisor:ensureActivitiesVisibleLocked()
activate ActivityStackSupervisor

ActivityStackSupervisor -> ActivityStack:ensureActivitiesVisibleLocked()
activate ActivityStack
ActivityStack -> ActivityStack:makeVisibleAndRestartIfNeeded()
activate ActivityStack

ActivityStack -> ActivityStackSupervisor:startSpecificActivityLocked()
activate ActivityStackSupervisor

ActivityStackSupervisor -> ActivityStackSupervisor:realStartActivityLocked()
activate ActivityStackSupervisor

ActivityStackSupervisor -> ClientLifecycleManager:scheduleTransaction()
activate ClientLifecycleManager

ClientLifecycleManager -> ClientTransaction_AMS:schedule()
activate ClientTransaction_AMS

ClientTransaction_AMS -> IApplicationThread:scheduleTransaction()
deactivate ClientTransaction_AMS
deactivate ClientLifecycleManager
deactivate ActivityStack
deactivate ActivityStack
deactivate ActivityStackSupervisor
deactivate ActivityStackSupervisor
deactivate ActivityStackSupervisor
deactivate ActivityStackSupervisor
deactivate ActivityManagerService
deactivate ActivityManagerService
activate IApplicationThread

IApplicationThread -> ActivityThread:scheduleTransaction()
activate ActivityThread
ActivityThread -> ActivityThread:sendMessage(ActivityThread.H.EXECUTE_TRANSACTION)
deactivate IApplicationThread
activate ActivityThread

ActivityThread -> TransactionExecutor:execute()
activate TransactionExecutor

TransactionExecutor -> TransactionExecutor:executeCallbacks()
activate TransactionExecutor

TransactionExecutor -> LaunchActivityItem:execute()
activate LaunchActivityItem

LaunchActivityItem -> ActivityThread:handleLaunchActivity()
activate ActivityThread

ActivityThread -> ActivityThread:performLaunchActivity()
activate ActivityThread

ActivityThread -> Instrumentation:callActivityOnCreate()
activate Instrumentation

Instrumentation -> Activity:performCreate()
activate Activity

Activity -> Activity:onCreate()
activate Activity
deactivate Activity
deactivate Activity
deactivate Instrumentation
deactivate ActivityThread
deactivate ActivityThread
deactivate ActivityThread
deactivate ActivityThread
deactivate TransactionExecutor
deactivate LaunchActivityItem

TransactionExecutor -> TransactionExecutor:executeLifecycleState()
activate TransactionExecutor

TransactionExecutor -> TransactionExecutor:cycleToPath()
activate TransactionExecutor

TransactionExecutor -> TransactionExecutor:performLifecycleSequence()
activate TransactionExecutor

TransactionExecutor -> ActivityThread:handleStartActivity()
activate ActivityThread

ActivityThread -> Activity:performStart()
activate Activity

Activity -> Instrumentation:callActivityOnStart()
activate Instrumentation

Instrumentation -> Activity:onStart()
activate Activity
deactivate Activity
deactivate Activity
deactivate Instrumentation
deactivate ActivityThread
deactivate TransactionExecutor
deactivate TransactionExecutor
deactivate TransactionExecutor



TransactionExecutor -> ResumeActivityItem:execute()
activate ResumeActivityItem

ResumeActivityItem -> ActivityThread:handleResumeActivity()
activate ActivityThread

ResumeActivityItem -> ActivityThread:performResumeActivity()
activate ActivityThread

ActivityThread -> Activity:performResume()
activate Activity

Activity -> Instrumentation:callActivityOnResume()
activate Instrumentation

Instrumentation -> Activity:onResume()
activate Activity
deactivate Activity
deactivate Activity
deactivate Instrumentation
deactivate ActivityThread
deactivate ActivityThread
deactivate ResumeActivityItem

TransactionExecutor -> ResumeActivityItem:postExecute()
activate ResumeActivityItem

ResumeActivityItem -> ActivityManager:getService()
activate ActivityManager

ActivityManager -> IActivityManager:activityResumed()
deactivate ResumeActivityItem
deactivate TransactionExecutor
deactivate ActivityManager
activate IActivityManager



IActivityManager -> ActivityManagerService:activityResumed()
activate ActivityManagerService




'TransactionExecutor -> ClientTransaction_App:



@enduml